# 🐍 Python Cheat Sheet

Rychlá referenční příručka pro Python (vhodná pro začátečníky i pokročilejší).
Každá sekce obsahuje krátké příklady a komentáře.

---
# Obsah

1. [Spuštění Pythonu](#python)
2. [Importy modulů](#importy-modulů)
3. [Vyčištění terminálu](#vyčištění-terminálu)
4. [Komentáře](#jednořádkový-komentář)
5. [Typy proměnných](#typy-proměnných)
6. [Operace se stringem](#operace-se-stringem)
7. [Slicing](#slicing)
8. [Formátování](#formátování)
9. [Základy: print() a input()](#základy-print-a-input-v-pythonu)
10. [Práce s časem](#práce-s-časem)
11. [Čísla a operátory](#čísla-a-operátory)
12. [Podmínka](#podmínka)
13. [Zkrácená forma podmínky](#zkrácená-forma)
14. [Smyčky](#smyčka)
    - [For smyčka](#for-smyčka)
    - [While smyčka](#while-smyčka)
    - [Smyčka přes list](#pomocí-listu)
15. [Funkce](#funkce)
16. [Docstring (dokumentační řetězec)](#-co-je-docstring)
17. [Google styl docstringu](#google-styl)
18. [List (seznam)](#list-seznam)
19. [Dictionary (slovník)](#dictionary-slovník)
20. [Množina](#množina)
21. [Výjimky (Errory)](#errory-výjimky)
22. [Obrázky v Markdownu](#obrázky-v-markdownu)



```python
python              # spustí interaktivní režim
python script.py    # spustí skript
```
## Importy modulů
```python
Provádíme na začátku programu.
import math
from os import path

print(math.sqrt(16))
print(path.exists("data.txt"))
```
## Vyčištění terminálu
```python
import os

# Pro Windows
os.system('cls')

# Pro macOS a Linux
os.system('clear')
```
## Jednořádkový komentář
```python
"""
Víceřádkový komentář
nebo docstring pro funkce
"""
```
## Typy proměnných

```python
x = 5               # int
y = 3.14            # float
name = "Python"     # string
is_fun = True       # boolean
```
## Operace se stringem

```python
s = "Hello World"

len(s)              # délka řetězce
s.lower()           # "hello world"
s.upper()           # "HELLO WORLD"
s.title()           # "Hello World"
s.strip()           # odstraní mezery na okrajích
s.replace("World", "Python")
"Python" in s       # True
```
## Slicing
```python
s[0:5]              # "Hello"
s[-1]               # poslední znak -> "d"
s[1:]               # vypíše znak a všechny za ním -> "ello Python"
s[:3]               # vypíše znak a všechny před ním -> "Hel"
```
## Formátování
```python
f"Ahoj, {name}!"    # moderní f-string
```
## Základy: `print()` a `input()` v Pythonu

---

### `print()`

- Slouží k **výpisu textu nebo hodnot na obrazovku (terminál).**

#### Základní použití

```python
print("Ahoj světe!")         # Vypíše text
print(5 + 3)                 # Vypíše výsledek výpočtu: 8
```
### `input()`

- Slouží k **získání vstupu od uživatele (čeká, dokud uživatel nezadá text a nepotvrdí Enter).**
#### Základní použití
```python
name = input("Zadej své jméno: ")
print(f"Ahoj, {name}!")
age = int(input("Zadej svůj věk: "))
print(f"Za rok ti bude {age + 1} let.")
```
# Práce s časem
```python
from datetime import datetime, timedelta

# Získání aktuálního času
now = datetime.now()

print(now)                     # celý objekt datetime (např. 2025-10-23 14:37:52.123456)
print(type(now))               # <class 'datetime.datetime'>

# ---- Výpis jednotlivých částí ----
print("Rok:", now.year)        # 2025
print("Měsíc:", now.month)     # 10
print("Den:", now.day)         # 23
print("Hodina:", now.hour)     # 14
print("Minuta:", now.minute)   # 37
print("Sekunda:", now.second)  # 52
```


## čísla a operátory
```python
a, b = 10, 3

a + b     # 13
a - b     # 7
a * b     # 30
a / b     # 3.3333
a // b    # celočíselné dělení -> 3
a % b     # zbytek po dělení -> 1
a ** b    # mocnina -> 1000
```
## Podmínka
```python
x = 10
if x > 0:
    print("kladné")
elif x == 0:
    print("nula")
else:
    print("záporné")
```

## Zkrácená forma
```python
status = "OK" if x > 0 else "NOK"
```
## Smyčka
### For smyčka
```python
for i in range(5):      # 0–4
    print(i)

```
### While smyčka
```python
i = 0
while i < 3:
    print(i)
    i += 1
```
### Pomocí listu
```python
for item in ["jablko", "banán"]: 
    print(item)                  # Vypíše itemy z listu
```
## Funkce
```python
def greet(name="světe"):          # Hodnota default argumentu je "světe"
    """Vrátí pozdrav"""           # Docstring
    return f"Ahoj, {name}!"

print(greet("Pepa"))    # Změnili jsme argument na "Pepa" -- Ahoj, Pepa
```
## 🧠 Co je docstring?

**Docstring** (documentation string) je speciální **řetězec v trojitých uvozovkách `""" ... """`**,  
který slouží k dokumentaci funkcí, tříd, metod a modulů.

📌 Umisťuje se **hned za definici** funkce, třídy nebo modulu — ne jako komentář, ale jako součást kódu.

```python
def greet(name):
    """Vrátí textový pozdrav pro zadané jméno."""
    return f"Ahoj, {name}!"
```
### Google styl
args: argumenty funkce (s čím funkce pracuje)

returns: co funkce vrací

raises: výjimky, co může funkce vyhodit
```python
def divide(a, b):
    """
    Vydělí první číslo druhým.

    Args:
        a (float): Dělenec.
        b (float): Dělitel.

    Returns:
        float: Výsledek dělení.

    Raises:
        ZeroDivisionError: Pokud je dělitel nulový.
    """
    if b == 0:
        raise ZeroDivisionError("Dělení nulou není povoleno.")
    return a / b
```
## List (seznam)
```python
nums = [1, 2, 3]
nums.append(4)
nums.remove(2)
nums.sort()
len(nums)
```
## Dictionary (slovník)
```python
person = {"name": "Eva", "age": 25}
person["age"] = 26
```
## Množina
```python
a = {1, 2, 3}
b = {3, 4, 5}
a | b   # sjednocení
a & b   # průnik
a - b   # rozdíl
```
## Errory (výjimky)
```python
try:
    result = 10 / 0
except ZeroDivisionError:
    print("Nelze dělit nulou!")
except Exception as e:
    print("Jiná chyba:", e)
else:
    print("Bez chyby")
finally:
    print("Toto se provede vždy.")
```
## Obrázky v Markdownu
V mnoha Markdown editorech (např. VS Code, Obsidian) můžeš obrázek vložit z clipboardu jednoduše pomocí Ctrl + V.
![alt text](image.png)

#### Pokročilejší verze pomocí HTML a CSS
```python
<p align="center">
  <img src="https://www.python.org/static/community_logos/python-logo.png" alt="Python logo" width="200" />
</p>
```
<p align="center">
  <img src="https://www.python.org/static/community_logos/python-logo.png" alt="Python logo" width="200" />
</p>
